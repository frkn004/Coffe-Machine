import customtkinter as ctkimport threadingimport timefrom PIL import Image, ImageTkclass ModernCoffeeMachine:    def __init__(self):        self.app = ctk.CTk()        self.app.title("Modern Kahve Makinesi")        self.app.geometry("1000x600")        # Tema ayarları        ctk.set_appearance_mode("dark")        ctk.set_default_color_theme("blue")        # Değişkenler        self.water_level = 100        self.coffee_beans = 100        self.milk_level = 100        self.money = 0.0        self.is_brewing = False        # Kahve menüsü ve fiyatları        self.coffee_menu = {            "Espresso": {"price": 15, "water": 30, "coffee": 18, "milk": 0},            "Americano": {"price": 20, "water": 170, "coffee": 18, "milk": 0},            "Cappuccino": {"price": 25, "water": 30, "coffee": 18, "milk": 120},            "Latte": {"price": 25, "water": 30, "coffee": 18, "milk": 150},            "Mocha": {"price": 30, "water": 30, "coffee": 18, "milk": 150}        }        self.setup_gui()    def setup_gui(self):        # Ana container        self.main_frame = ctk.CTkFrame(self.app)        self.main_frame.pack(fill="both", expand=True, padx=20, pady=20)        # Sol panel - Kontroller        self.left_panel = ctk.CTkFrame(self.main_frame)        self.left_panel.pack(side="left", fill="both", expand=True, padx=10)        # Makine durumu        self.status_frame = ctk.CTkFrame(self.left_panel)        self.status_frame.pack(fill="x", padx=10, pady=10)        ctk.CTkLabel(self.status_frame, text="MAKİNE DURUMU", font=("Arial", 16, "bold")).pack(pady=5)        # Su seviyesi        self.water_progress = ctk.CTkProgressBar(self.status_frame)        self.water_progress.pack(pady=5)        self.water_progress.set(self.water_level / 100)        ctk.CTkLabel(self.status_frame, text=f"Su Seviyesi: %{self.water_level}").pack()        # Kahve seviyesi        self.coffee_progress = ctk.CTkProgressBar(self.status_frame)        self.coffee_progress.pack(pady=5)        self.coffee_progress.set(self.coffee_beans / 100)        ctk.CTkLabel(self.status_frame, text=f"Kahve Çekirdeği: %{self.coffee_beans}").pack()        # Süt seviyesi        self.milk_progress = ctk.CTkProgressBar(self.status_frame)        self.milk_progress.pack(pady=5)        self.milk_progress.set(self.milk_level / 100)        ctk.CTkLabel(self.status_frame, text=f"Süt Seviyesi: %{self.milk_level}").pack()        # Para göstergesi        self.money_label = ctk.CTkLabel(self.status_frame,                                        text=f"Bakiye: {self.money}₺",                                        font=("Arial", 14, "bold"))        self.money_label.pack(pady=10)        # Para ekleme butonları        money_frame = ctk.CTkFrame(self.left_panel)        money_frame.pack(fill="x", padx=10, pady=10)        ctk.CTkLabel(money_frame, text="PARA EKLE", font=("Arial", 16, "bold")).pack(pady=5)        money_buttons = ctk.CTkFrame(money_frame)        money_buttons.pack(pady=5)        for amount in [5, 10, 20, 50]:            ctk.CTkButton(money_buttons,                          text=f"{amount}₺",                          command=lambda x=amount: self.add_money(x),                          width=60).pack(side="left", padx=5)        # Kahve seçimi        coffee_frame = ctk.CTkFrame(self.left_panel)        coffee_frame.pack(fill="x", padx=10, pady=10)        ctk.CTkLabel(coffee_frame, text="KAHVE SEÇİMİ", font=("Arial", 16, "bold")).pack(pady=5)        self.coffee_var = ctk.StringVar(value="")        for coffee, details in self.coffee_menu.items():            ctk.CTkRadioButton(coffee_frame,                               text=f"{coffee} ({details['price']}₺)",                               variable=self.coffee_var,                               value=coffee).pack(pady=2)        # Hazırlama butonu        self.brew_button = ctk.CTkButton(self.left_panel,                                         text="KAHVE HAZIRLA",                                         command=self.start_brewing,                                         height=40,                                         font=("Arial", 16, "bold"))        self.brew_button.pack(pady=20)        # Sağ panel - Durum göstergesi        self.right_panel = ctk.CTkFrame(self.main_frame)        self.right_panel.pack(side="right", fill="both", expand=True, padx=10)        self.status_label = ctk.CTkLabel(self.right_panel,                                         text="Kahve Makinesi Hazır",                                         font=("Arial", 20))        self.status_label.pack(pady=20)        # Kahve görseli için yer tutucu        self.coffee_display = ctk.CTkLabel(self.right_panel,                                           text="",                                           width=300,                                           height=300)        self.coffee_display.pack(expand=True)    def add_money(self, amount):        self.money += amount        self.money_label.configure(text=f"Bakiye: {self.money}₺")    def start_brewing(self):        if self.is_brewing:            self.show_warning("Kahve hazırlanıyor, lütfen bekleyin!")            return        selected_coffee = self.coffee_var.get()        if not selected_coffee:            self.show_warning("Lütfen bir kahve seçin!")            return        coffee_details = self.coffee_menu[selected_coffee]        if self.money < coffee_details["price"]:            self.show_warning("Yetersiz bakiye!")            return        if (self.water_level < coffee_details["water"] or                self.coffee_beans < coffee_details["coffee"] or                self.milk_level < coffee_details["milk"]):            self.show_warning("Yetersiz malzeme!")            return        self.is_brewing = True        self.money -= coffee_details["price"]        self.money_label.configure(text=f"Bakiye: {self.money}₺")        # Malzeme kullanımı        self.water_level -= coffee_details["water"]        self.coffee_beans -= coffee_details["coffee"]        self.milk_level -= coffee_details["milk"]        # Progress barları güncelle        self.water_progress.set(self.water_level / 100)        self.coffee_progress.set(self.coffee_beans / 100)        self.milk_progress.set(self.milk_level / 100)        # Hazırlama işlemini başlat        brewing_thread = threading.Thread(target=lambda: self.brew_coffee(selected_coffee))        brewing_thread.start()    def brew_coffee(self, coffee_type):        steps = [            "Kahve çekirdekleri öğütülüyor...",            "Su ısıtılıyor...",            "Espresso hazırlanıyor...",            "Süt ısıtılıyor..." if self.coffee_menu[coffee_type]["milk"] > 0 else None,            "Süt köpürtülüyor..." if self.coffee_menu[coffee_type]["milk"] > 0 else None,            f"{coffee_type} hazırlanıyor...",            "Kahveniz Hazır!"        ]        steps = [step for step in steps if step is not None]        for step in steps:            self.status_label.configure(text=step)            time.sleep(2)        self.is_brewing = False    def show_warning(self, message):        warning_window = ctk.CTkToplevel(self.app)        warning_window.title("Uyarı")        warning_window.geometry("300x150")        ctk.CTkLabel(warning_window, text=message, wraplength=250).pack(pady=20)        ctk.CTkButton(warning_window, text="Tamam",                      command=warning_window.destroy).pack(pady=10)    def run(self):        self.app.mainloop()if __name__ == "__main__":    coffee_machine = ModernCoffeeMachine()    coffee_machine.run()